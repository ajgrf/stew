#!/bin/sh
# Copyright 2016 Alex Griffin.  See LICENSE file for details.

set -e

STEWPKGS="${STEWPKGS:-.}"
STEWPREFIX="${STEWPREFIX:-$HOME/.local}"

usage() {
	echo "usage: stew [-ilrs] [pkg ...]" >&2
	exit 2
}

main() {
	if test $# -eq 0; then
		main -l
	fi

	action=stew_install
	while test $# -gt 0; do
		case "$1" in
		-i)
			action=stew_install
			;;
		-l)
			stew_list
			exit
			;;
		-r)
			action=stew_remove
			;;
		-s)
			shift
			stew_search "$@"
			exit
			;;
		-*)
			usage
			;;
		*)
			"$action" "$1"
			;;
		esac
		shift
	done
}

stew_install() (
	if test -f "$STEWPKGS/$1.pkg.sh"; then
		use_package "$1"

		# finally run the package function
		if ! test -d "$pkgdir"; then
			package
		fi
	else
		error 3 "package $1 not found in $STEWPKGS"
	fi
)

stew_list() {
	ls -1 "$STEWPREFIX/stow"
}

stew_remove() (
	pkgdir="$STEWPREFIX/stow/${1##*/}"
	if test -f "$STEWPKGS/$1.pkg.sh"; then
		use_package "$1"
	fi

	if test -d "$pkgdir"; then
		stow -d "$STEWPREFIX/stow" -D "${pkgdir#$STEWPREFIX/stow/}"
		rm -rf "$pkgdir"
	else
		error 3 "could not find package $1 to remove"
	fi
)

stew_search() {
	for file in "$STEWPKGS"/*.pkg.sh; do (
		use_package "$file"
		if test -d "$pkgdir"; then
			installed=1
		fi
		info="${name}${version:+-$version}${installed:+ [installed]}${description:+ - $description}"

		matches=1
		for pattern; do
			if ! echo "$info" | grep -q -i -e "$pattern"; then
				matches=0
				break
			fi
		done
		unset pattern

		if test "$matches" -eq 1; then
			echo "$info"
		fi
	); done
	unset file
}

# exit codes:
# 2 usage error
# 3 packaging error
error() {
	code="$1"
	shift
	echo stew: "$@" >&2
	exit "$code"
}

use() {
	for dir in "$STEWPKGS" "$STEWPREFIX/lib/stew"; do
		if test -f "$dir/${1##*/}.shlib"; then
			. "$dir/${1##*/}.shlib"
		fi
	done
	unset dir
}

use_package() {
	name="${1##*/}"
	name="${name%*.pkg.sh}"
	if test -f "$STEWPKGS/$name.pkg.sh"; then
		use stdenv
		. "$STEWPKGS/$name.pkg.sh"
		pkgdir="$STEWPREFIX/stow/$name${version:+-$version}"
	else
		error 3 "could not find package $name"
	fi
}

main "$@"
