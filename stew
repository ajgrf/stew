#!/bin/bash
set -e

# Stew is a simple package manager for installing software outside of your
# distribution's repositories. It leverages the excellent GNU Stow utility to
# manage packages, but alleviates much of the boilerplate you might otherwise
# need to write if you wanted to automate your stow installations.

# configuration
STEWPREFIX="${STEWPREFIX:-$HOME/.local}"
STEWPKGS="${STEWPKGS:-.}"

# A stew package is a shell script with the following properties:
#
#   * lives in a file named $name.pkg.sh in a directory in $STEWPKGS
#   * consists only of function and variable definitions (when run or sourced
#     it does nothing on its own)
#   * defines a `package` function which installs the software into $pkgdir
#     and runs stow on it 
#   * inherits a default implementation from stdenv.sh

usage() {
	echo "usage: stew [-ilrs] [pkg ...]" >&2
	exit 2
}

main() {
	local action

	if test $# -eq 0; then
		main -l
	fi

	action=stew_install
	while test $# -gt 0; do
		case "$1" in
			-i) action=stew_install ;;
			-l) stew_list; exit ;;
			-r) action=stew_remove ;;
			-s) shift; stew_search "$@"; exit ;;
			-*) usage ;;
			*)  "$action" "$1" ;;
		esac
		shift
	done
}

stew_install() (
	if test -f "$STEWPKGS/$1.pkg.sh"; then
		name="$1"
		use stdenv
		. "$STEWPKGS/$1.pkg.sh"
		pkgdir="$STEWPREFIX/stow/$name${version:+-$version}"

		# finally run the package function
		if ! test -d "$pkgdir"; then
			package
		fi
	else
		error 3 "package $1 not found in $STEWPKGS"
	fi
)

stew_list() {
	ls -1 "$STEWPREFIX/stow"
}

stew_remove() (
	if test -d "$STEWPREFIX/stow/$1"; then
		pkgname="$1"
	elif test -f "$STEWPKGS/$1.pkg.sh"; then
		name="$1"
		use stdenv
		. "$STEWPKGS/$1.pkg.sh"
		pkgname="$name${version:+-$version}"
	fi

	if test "$pkgname"; then
		stow -d "$STEWPREFIX/stow" -D "$pkgname"
		rm -rf "$STEWPREFIX/stow/$pkgname"
	else
		error 3 "could not find package $1 to remove"
	fi
)

stew_search() {
	for file in "$STEWPKGS"/*.pkg.sh; do (
		name="${file%*.pkg.sh}"
		use stdenv
		. "$file"
		info="${name}${version:+-$version}${homepage:+ ($homepage)}${description:+ - $description}"

		matches=1
		for pattern; do
			if ! echo "$info" | grep -q -e "$pattern"; then
				matches=0
				break
			fi
		done

		if test "$matches" -eq 1; then
			echo "$info"
		fi
	) done
}

# exit codes:
# 2 usage error
# 3 packaging error
error() {
	local code="$1"
	shift
	echo stew: "$@" >&2
	exit "$code"
}

use() {
	for dir in "$STEWPKGS" "$STEWPREFIX/lib/stew"; do
		if test -f "$dir/$1.sh"; then
			. "$dir/$1.sh"
		fi
	done
}

main "$@"
